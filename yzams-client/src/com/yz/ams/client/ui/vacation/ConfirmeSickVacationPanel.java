/*
 * ConfirmeSickVacationPanel.java
 * 
 * Copyright(c) 2007-2016 by Yingzhi Tech
 * All Rights Reserved
 * 
 * Created at 2016-07-05 15:32:51
 */
package com.yz.ams.client.ui.vacation;

import com.nazca.ui.NComponentStyleTool;
import com.nazca.ui.NInternalDiag;
import com.nazca.ui.NLabelMessageTool;
import com.nazca.util.TimeFairy;
import com.yz.ams.client.agent.AgentListener;
import com.yz.ams.client.agent.ConfirmDenySickVacationAgent;
import com.yz.ams.client.agent.ConfirmPassSickVacationAgent;
import com.yz.ams.client.agent.ConfirmSickPicVacationAgent;
import com.yz.ams.client.util.ClientUtils;
import com.yz.ams.model.Vacation;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import javax.swing.JComponent;
import javax.swing.SwingUtilities;

/**
 *
 * @author 赵洪坤 <zhaohongkun@yzhtech.com>
 */
public class ConfirmeSickVacationPanel extends javax.swing.JPanel {

    private NInternalDiag<Vacation, JComponent> diag = null;
    ConfirmPassSickVacationAgent confirmPassSickVacationAgent = null;
    ConfirmDenySickVacationAgent confirmDenySickVacationAgent = null;
    ConfirmSickPicVacationAgent confirmSickPicVacationAgent = null;
    private Vacation curVacation;
    public void setCurVacation(Vacation curVacation) {
        this.curVacation = curVacation;
    }
    public void setPicResult(BufferedImage backCurImage) {
        BufferedImage newImage = new BufferedImage(900, 670, backCurImage.getType());
        Graphics g = newImage.getGraphics();
        g.drawImage(backCurImage, 0, 0, 900, 670, null);
        g.dispose();
        backCurImage = newImage;
        nImagePanel1.setImage(backCurImage);
    }
    /**
     * Creates new form ConfirmeSickVacationPanel1
     */
    
    public ConfirmeSickVacationPanel() {
        initComponents();
        initUI();
        confirmPassSickVacationAgent = new ConfirmPassSickVacationAgent();
        confirmPassSickVacationAgent.addListener(passAgentListener);
        confirmDenySickVacationAgent = new ConfirmDenySickVacationAgent();
        confirmDenySickVacationAgent.addListener(denyAgentListener);
    }
      private void initUI() {
        NComponentStyleTool.goodNewsStyle(passBtn);
         NComponentStyleTool.errorStyle(noPassBtn);
    }
  public Vacation showMe(JComponent parent) {
        diag = new NInternalDiag<Vacation, JComponent>("病假证明确认", ClientUtils.buildImageIcon("sick-confirm.png"), this, 690, 555);
        return diag.showInternalDiag(parent);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nActionPane1 = new com.nazca.ui.NActionPane();
        noPassBtn = new javax.swing.JButton();
        passBtn = new javax.swing.JButton();
        nImagePanel1 = new com.nazca.ui.NImagePanel();

        setLayout(new java.awt.BorderLayout());

        noPassBtn.setText("不通过");
        noPassBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        noPassBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noPassBtnActionPerformed(evt);
            }
        });
        nActionPane1.add(noPassBtn);

        passBtn.setText("通过");
        passBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        passBtn.setMaximumSize(new java.awt.Dimension(77, 23));
        passBtn.setMinimumSize(new java.awt.Dimension(77, 23));
        passBtn.setPreferredSize(new java.awt.Dimension(77, 23));
        passBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passBtnActionPerformed(evt);
            }
        });
        nActionPane1.add(passBtn);

        add(nActionPane1, java.awt.BorderLayout.SOUTH);
        add(nImagePanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void noPassBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noPassBtnActionPerformed
        confirmDenySickVacationAgent.setVacationId(curVacation.getVacationId());
        confirmDenySickVacationAgent.start();
    }//GEN-LAST:event_noPassBtnActionPerformed

    private void passBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passBtnActionPerformed
        confirmPassSickVacationAgent.setVacationId(curVacation.getVacationId());
        confirmPassSickVacationAgent.start();
        
    }//GEN-LAST:event_passBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.nazca.ui.NActionPane nActionPane1;
    private com.nazca.ui.NImagePanel nImagePanel1;
    private javax.swing.JButton noPassBtn;
    private javax.swing.JButton passBtn;
    // End of variables declaration//GEN-END:variables
    AgentListener<Object> passAgentListener = new AgentListener<Object>() {
        @Override
        public void onStarted(long seq) {
            noPassBtn.setEnabled(false);
            passBtn.setEnabled(false);
            nActionPane1.getWaitingProcess().setVisible(true);
            nActionPane1.getWaitingProcess().setIndeterminate(true);
            nActionPane1.getMsgLabel().setVisible(true);
            NLabelMessageTool.infoMessage(nActionPane1.getMsgLabel(), "正在提交");
        }

        @Override
        public void onSucceeded(Object result, long seq) {
            noPassBtn.setEnabled(true);
            passBtn.setEnabled(true);
            nActionPane1.getWaitingProcess().setVisible(false);
            nActionPane1.getWaitingProcess().setIndeterminate(false);
            nActionPane1.getMsgLabel().setVisible(true);
            NLabelMessageTool.goodNewsMessage(nActionPane1.getMsgLabel(), "提交成功");
            new Thread() {
                public void run() {
                    new TimeFairy().sleepIfNecessary();
                    SwingUtilities.invokeLater(new Runnable() {
                        public void run() {
                            nActionPane1.getMsgLabel().setVisible(false);
                            diag.hideDiag();
                        }
                    });
                }
            }.start(); 
        }

        
        @Override
        public void onFailed(String errMsg, int errCode, long seq) {
            noPassBtn.setEnabled(true);
            passBtn.setEnabled(true);
            nActionPane1.getWaitingProcess().setVisible(false);
            nActionPane1.getWaitingProcess().setIndeterminate(false);
            NLabelMessageTool.errorMessage(nActionPane1.getMsgLabel(), errCode, errMsg);
            nActionPane1.getMsgLabel().setVisible(true);
            
        }   
    };
    
    AgentListener<Object> denyAgentListener = new AgentListener<Object>() {
        @Override
        public void onStarted(long seq) {
            noPassBtn.setEnabled(false);
            passBtn.setEnabled(false);
            nActionPane1.getWaitingProcess().setVisible(true);
            nActionPane1.getWaitingProcess().setIndeterminate(true);
            nActionPane1.getMsgLabel().setVisible(true);
            NLabelMessageTool.infoMessage(nActionPane1.getMsgLabel(), "正在提交");
        }

        @Override
        public void onSucceeded(Object result, long seq) {
            noPassBtn.setEnabled(true);
            passBtn.setEnabled(true);
            nActionPane1.getWaitingProcess().setVisible(false);
            nActionPane1.getWaitingProcess().setIndeterminate(false);
            nActionPane1.getMsgLabel().setVisible(true);
            NLabelMessageTool.goodNewsMessage(nActionPane1.getMsgLabel(), "提交成功");
            new Thread() {
                public void run() {
                    new TimeFairy().sleepIfNecessary();
                    SwingUtilities.invokeLater(new Runnable() {
                        public void run() {
                            nActionPane1.getMsgLabel().setVisible(false);
                            diag.hideDiag();
                        }
                    });
                }
            }.start(); 
        }

        
        @Override
        public void onFailed(String errMsg, int errCode, long seq) {
            noPassBtn.setEnabled(true);
            passBtn.setEnabled(true);
            nActionPane1.getWaitingProcess().setVisible(false);
            nActionPane1.getWaitingProcess().setIndeterminate(false);
            NLabelMessageTool.errorMessage(nActionPane1.getMsgLabel(), errCode, errMsg);
            nActionPane1.getMsgLabel().setVisible(true);
        }   
    };
}
