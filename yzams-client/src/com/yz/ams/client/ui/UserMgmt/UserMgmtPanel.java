/*
 * UserMgmtPanel.java
 * 
 * Copyright(c) 2007-2016 by Yingzhi Tech
 * All Rights Reserved
 * 
 * Created at 2016-06-22 10:03:38
 */
package com.yz.ams.client.ui.UserMgmt;

import com.nazca.ui.NWaitingPanel;
import com.nazca.ui.TextHinter;
import com.nazca.ui.UIUtilities;
import com.nazca.ui.laf.border.IconLabelBorder;
import com.nazca.ui.util.CardLayoutWrapper;
import com.nazca.util.TimeFairy;
import com.yz.ams.client.agent.AgentListener;
import com.yz.ams.client.agent.QueryEmployeeAgent;
import com.yz.ams.client.agent.QueryUsmUserAgent;
import com.yz.ams.client.model.EmployeeTableModel;
import com.yz.ams.client.renderer.EmployeeTableRenderer;
import com.yz.ams.model.Employee;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author 赵洪坤 <zhaohongkun@yzhtech.com>
 */
public class UserMgmtPanel extends javax.swing.JPanel {

    private CardLayoutWrapper leftCard = null;
    private CardLayoutWrapper rightCard = null;
    private IconLabelBorder leftBorder = null;
    private IconLabelBorder rightBorder = null;
    private EmployeeTableModel tableModel = null;
    private EmployeeTableRenderer tableRenderer = null;
    private QueryEmployeeAgent queryEmployeeAgent = null;
    private QueryUsmUserAgent queryUsmUserAgent = null;
    private Employee curEmployee = null;

    /**
     * Creates new form UserManagePanel
     */
    public UserMgmtPanel() {
        initComponents();
        initUI();
        initAgentAndListener();
        initModelAndRenderer();
        refreshBtnActionPerformed(null);
    }

    private void initUI() {
        nProcessingPanel1.setVisible(false);
        jLabel1.setVisible(false);
        //检索框里加搜索标志和默认背景字
        UIUtilities.attachSearchIcon(searchTxFd);
        UIUtilities.makeItLikeLabel(userNameTxFd);//姓名
        UIUtilities.makeItLikeLabel(employeeNumberTxFd);//工号
        UIUtilities.makeItLikeLabel(takingTimeTxFd);//入职时间
        TextHinter.attach("输入姓名并回车", searchTxFd);
        leftBorder = new IconLabelBorder(getClass().getResource(
                "/com/yz/ams/client/res/user-list.png"), "用户列表");
        rightBorder = new IconLabelBorder(getClass().getResource(
                "/com/yz/ams/client/res/user-info-list.png"), "用户信息列表");
        leftCard = new CardLayoutWrapper(leftCardPane1);
        rightCard = new CardLayoutWrapper(rightCardPanel);
        leftPane.setBorder(leftBorder);
        rightCardPanel.setBorder(rightBorder);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        leftPane = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        refreshBtn = new javax.swing.JButton();
        synchroBtn = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0));
        nProcessingPanel1 = new com.nazca.ui.NProcessingPanel();
        jLabel1 = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        searchTxFd = new javax.swing.JTextField();
        leftCardPane1 = new javax.swing.JPanel();
        contentPane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableComp = new javax.swing.JTable();
        leftWaitPanel = new com.nazca.ui.NWaitingPanel();
        rightCardPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        userNameLb = new javax.swing.JLabel();
        userNameTxFd = new javax.swing.JTextField();
        employeeNumberLb = new javax.swing.JLabel();
        employeeNumberTxFd = new javax.swing.JTextField();
        takingTimeLb = new javax.swing.JLabel();
        takingTimeTxFd = new javax.swing.JTextField();
        rightWaitPane1 = new com.nazca.ui.NWaitingPanel();

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setResizeWeight(0.65);

        leftPane.setMaximumSize(new java.awt.Dimension(10, 10));
        leftPane.setLayout(new java.awt.BorderLayout());

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/yz/ams/client/res/refresh_16.png"))); // NOI18N
        refreshBtn.setText("刷新");
        refreshBtn.setFocusable(false);
        refreshBtn.setMargin(new java.awt.Insets(2, 5, 2, 5));
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(refreshBtn);

        synchroBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/yz/ams/client/res/synch-user.png"))); // NOI18N
        synchroBtn.setText("同步");
        synchroBtn.setFocusable(false);
        synchroBtn.setMargin(new java.awt.Insets(2, 5, 2, 5));
        synchroBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchroBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(synchroBtn);
        jToolBar1.add(filler1);

        nProcessingPanel1.setMaximumSize(new java.awt.Dimension(10, 10));

        javax.swing.GroupLayout nProcessingPanel1Layout = new javax.swing.GroupLayout(nProcessingPanel1);
        nProcessingPanel1.setLayout(nProcessingPanel1Layout);
        nProcessingPanel1Layout.setHorizontalGroup(
            nProcessingPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );
        nProcessingPanel1Layout.setVerticalGroup(
            nProcessingPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        jToolBar1.add(nProcessingPanel1);

        jLabel1.setText("jLabel1");
        jToolBar1.add(jLabel1);
        jToolBar1.add(filler2);

        searchTxFd.setMaximumSize(new java.awt.Dimension(150, 21));
        searchTxFd.setMinimumSize(new java.awt.Dimension(150, 21));
        searchTxFd.setPreferredSize(new java.awt.Dimension(150, 21));
        searchTxFd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTxFdActionPerformed(evt);
            }
        });
        jToolBar1.add(searchTxFd);

        leftPane.add(jToolBar1, java.awt.BorderLayout.NORTH);

        leftCardPane1.setMaximumSize(new java.awt.Dimension(10, 10));
        leftCardPane1.setLayout(new java.awt.CardLayout());

        contentPane.setMaximumSize(new java.awt.Dimension(10, 10));
        contentPane.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setMaximumSize(new java.awt.Dimension(10, 10));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 64));

        tableComp.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        tableComp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableComp.setMaximumSize(new java.awt.Dimension(10, 10));
        tableComp.setMinimumSize(new java.awt.Dimension(10, 10));
        jScrollPane1.setViewportView(tableComp);

        contentPane.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        leftCardPane1.add(contentPane, "CONTENT");
        leftCardPane1.add(leftWaitPanel, "WAIT");

        leftPane.add(leftCardPane1, java.awt.BorderLayout.CENTER);

        jSplitPane1.setLeftComponent(leftPane);

        rightCardPanel.setMaximumSize(new java.awt.Dimension(10, 10));
        rightCardPanel.setLayout(new java.awt.CardLayout());

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        userNameLb.setText("　用户姓名：");

        userNameTxFd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameTxFdActionPerformed(evt);
            }
        });

        employeeNumberLb.setText("　工号：");
        employeeNumberLb.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        takingTimeLb.setText("入职时间：");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(userNameLb, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userNameTxFd, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(employeeNumberLb)
                            .addComponent(takingTimeLb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(employeeNumberTxFd)
                            .addComponent(takingTimeTxFd))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLb)
                    .addComponent(userNameTxFd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeNumberLb)
                    .addComponent(employeeNumberTxFd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(takingTimeTxFd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(takingTimeLb))
                .addContainerGap(475, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel1);

        rightCardPanel.add(jScrollPane2, "CONTENT");
        rightCardPanel.add(rightWaitPane1, "WAIT");

        jSplitPane1.setRightComponent(rightCardPanel);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void initModelAndRenderer() {
        tableModel = new EmployeeTableModel();
        tableComp.setModel(tableModel);
        tableRenderer = new EmployeeTableRenderer();
        tableComp.setDefaultRenderer(Object.class, tableRenderer);
        TableRowSorter<TableModel> rightRowSorter = UIUtilities.generateAndSetTriStateRowSorter(tableComp, tableModel);
        tableComp.setRowSorter(rightRowSorter);
    }

    private void initAgentAndListener() {//监听
        queryEmployeeAgent = new QueryEmployeeAgent();
        queryUsmUserAgent = new QueryUsmUserAgent();
        queryUsmUserAgent.addListener(queryUsmUserAgentLis);
        queryEmployeeAgent.addListener(queryEmployeeAgentLis);
        tableComp.getSelectionModel().addListSelectionListener(new ListSelectionListener() {//分页监听
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    selectingVacation();
                }
            }
        });
        searchTxFd.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (KeyEvent.VK_ENTER == e.getKeyCode()) {
                    refreshBtnActionPerformed(null);
                }
            }
        });
    }

    private void selectingVacation() {//表格监听
        int idx = tableComp.getSelectedRow();
        if (idx >= 0) {
            idx = tableComp.convertRowIndexToModel(idx);
            curEmployee = tableModel.getData(idx);
            fillRightPane();
        }
    }

    private void fillRightPane() {
        SimpleDateFormat ss = new SimpleDateFormat("yyyy-MM-dd");
        if (curEmployee.getEntryTime() != null) {
            String entryTime = ss.format(curEmployee.getEntryTime());
            //入职时间
            takingTimeTxFd.setText(String.valueOf(entryTime));
        }else{
            takingTimeTxFd.setText("--");
        }
        if (curEmployee.getUserName() != null) {
            //用户名
            userNameTxFd.setText(curEmployee.getUserName());
        }else{
             userNameTxFd.setText("--");
        }
        if (curEmployee.getEmployeeNumber() != null) {
            //工号
            employeeNumberTxFd.setText(curEmployee.getEmployeeNumber());
        }else{
            employeeNumberTxFd.setText("--");
        }

    }

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        String keywords = searchTxFd.getText().trim();
        if (keywords.isEmpty()) {
            keywords = null;
        }
        queryEmployeeAgent.setParameters(keywords);
        queryEmployeeAgent.start();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void synchroBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchroBtnActionPerformed
        queryUsmUserAgent.start();
    }//GEN-LAST:event_synchroBtnActionPerformed

    private void searchTxFdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTxFdActionPerformed
        refreshBtnActionPerformed(null);
    }//GEN-LAST:event_searchTxFdActionPerformed

    private void userNameTxFdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameTxFdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameTxFdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPane;
    private javax.swing.JLabel employeeNumberLb;
    private javax.swing.JTextField employeeNumberTxFd;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel leftCardPane1;
    private javax.swing.JPanel leftPane;
    private com.nazca.ui.NWaitingPanel leftWaitPanel;
    private com.nazca.ui.NProcessingPanel nProcessingPanel1;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JPanel rightCardPanel;
    private com.nazca.ui.NWaitingPanel rightWaitPane1;
    private javax.swing.JTextField searchTxFd;
    private javax.swing.JButton synchroBtn;
    private javax.swing.JTable tableComp;
    private javax.swing.JLabel takingTimeLb;
    private javax.swing.JTextField takingTimeTxFd;
    private javax.swing.JLabel userNameLb;
    private javax.swing.JTextField userNameTxFd;
    // End of variables declaration//GEN-END:variables
 private AgentListener<List<Employee>> queryEmployeeAgentLis = new AgentListener<List<Employee>>() {//监听
        @Override//监听
        public void onStarted(long seq) {
            searchTxFd.setEnabled(false);
            synchroBtn.setEnabled(false);
            leftWaitPanel.showWaitingMode("数据加载中，请稍后…");
            leftWaitPanel.setIndeterminate(true);
            leftWaitPanel.showWaitingMode();
            leftCard.show(CardLayoutWrapper.WAIT);
            rightWaitPane1.showWaitingMode("数据加载中，请稍后…");
            rightWaitPane1.setIndeterminate(true);
            rightWaitPane1.showWaitingMode();
            rightCard.show(CardLayoutWrapper.WAIT);
        }

        @Override
        public void onSucceeded(List<Employee> result, long seq) {
            if (result != null && result.size()> 0) {//判断是否为空
                tableModel.setDatas(result);
                leftCard.show(CardLayoutWrapper.CONTENT);
                leftWaitPanel.setIndeterminate(false);
                rightCard.show(CardLayoutWrapper.CONTENT);//切换面板
                rightWaitPane1.setIndeterminate(false);//关闭等待面板
                tableComp.getSelectionModel().setSelectionInterval(0, 0);//刷星结束默认第一条数据
            } else {
                selectingVacation();
                leftWaitPanel.showMsgMode("暂无用户信息", 0, NWaitingPanel.MSG_MODE_INFO);
                leftCard.show(CardLayoutWrapper.WAIT);
                rightWaitPane1.showMsgMode("请选择用户信息", 0, NWaitingPanel.MSG_MODE_INFO);
                rightCard.show(CardLayoutWrapper.WAIT);
            }
            refreshBtn.setEnabled(true);
            synchroBtn.setEnabled(true);
            searchTxFd.setEnabled(true);
        }

        @Override//失败面板
        public void onFailed(String errMsg, int errCode, long seq) {
            refreshBtn.setEnabled(true);
            synchroBtn.setEnabled(false);
            searchTxFd.setEnabled(false);
            leftWaitPanel.showMsgMode(errMsg, errCode, NWaitingPanel.MSG_MODE_ERROR);
            leftCard.show(CardLayoutWrapper.FAIL);
            leftWaitPanel.setIndeterminate(false);
            rightWaitPane1.showMsgMode(errMsg, errCode, NWaitingPanel.MSG_MODE_ERROR);
            rightCard.show(CardLayoutWrapper.FAIL);
            rightWaitPane1.setIndeterminate(false);
        }
    };
    private final AgentListener<List<Employee>> queryUsmUserAgentLis = new AgentListener<List<Employee>>() {//监听

        @Override
        public void onStarted(long seq) {
            nProcessingPanel1.setVisible(true);
            jLabel1.setVisible(true);
            nProcessingPanel1.setIndeterminate(true);
            jLabel1.setText("正在同步...");
        }

        @Override
        public void onSucceeded(List<Employee> result, long seq) {
            if (result.size() != 0) {//判断是否为真
                tableModel.setDatas(result);
                tableComp.getSelectionModel().setSelectionInterval(0, 0);//刷星结束默认第一条数据
                nProcessingPanel1.setVisible(false);
                jLabel1.setVisible(true);
                nProcessingPanel1.setIndeterminate(false);
                jLabel1.setText("同步成功！");
                
                 new Thread() {
                        public void run() {
                            new TimeFairy().sleepIfNecessary();
                            jLabel1.setVisible(false);
                        }
                    }.start();
            }else{
                nProcessingPanel1.setVisible(false);
                jLabel1.setVisible(true);
                nProcessingPanel1.setIndeterminate(false);
                jLabel1.setText("同步失败！");
            }

        }

        @Override
        public void onFailed(String errMsg, int errCode, long seq) {
            nProcessingPanel1.setVisible(false);
            jLabel1.setVisible(true);
            nProcessingPanel1.setIndeterminate(false);
            jLabel1.setText("同步失败！");
        }

    };

}
