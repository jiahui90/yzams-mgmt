package com.yz.ams.client.ui.statistics;

/*
 * PreviewPrintPanel.java
 * 
 * Copyright(c) 2007-2015 by Yingzhi Tech
 * All Rights Reserved
 * 
 * Created at 2015-11-24 12:16:54
 */
//package com.bjeea.meeting.client.meetingaffairs.ui;
//
//import com.bjeea.meeting.client.listener.AgentListener;
//import com.bjeea.meeting.client.meetingaffairs.agent.MergePrintAffairAgent;
//import com.bjeea.meeting.client.meetingaffairs.agent.SingerPrintAffairAgent;
//import com.bjeea.meeting.client.utils.ClientUtils;
//import com.bjeea.meeting.client.utils.StaticDataUtil;
//import com.bjeea.meeting.common.model.MeetingInfo;
//import com.bjeea.meeting.common.model.MergeAffairModel;
//import com.bjeea.meeting.common.model.MergeReportModel;
//import com.bjeea.meeting.common.model.SingerReportLisModel;
//import com.bjeea.meeting.common.model.SingerReportModel;
//import com.bjeea.meeting.common.model.jpa.Meeting;
import com.nazca.ui.NInternalDiag;
import com.nazca.ui.NLabelMessageTool;
import com.nazca.ui.NWaitingPanel;
import com.nazca.ui.util.CardLayoutWrapper;
import com.nazca.usm.model.USMSOrganization;
import com.nazca.usm.model.USMSUser;
import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JComponent;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;

/**
 *
 * @author Zhu Mengchao
 */
public class PreviewPrintPanel extends javax.swing.JPanel {

    private String printType = null;
    public static final String SINGER = "SINGER";
    public static final String MERGE = "MERGE";
    private NInternalDiag<Object, JComponent> diag = null;
    private CardLayoutWrapper card1 = null;
//    private SingerPrintAffairAgent singerAgent = null;
//    private List<SingerReportLisModel> lis = new ArrayList<>();
//    private MergePrintAffairAgent mergeAgent = null;
//    private List<Meeting> meetings;
//    private List<MergeReportModel> mergeLis = new ArrayList<>();
//
//    public List<Meeting> getMeetings() {
//        return meetings;
//    }

//    public void setMeetings(List<Meeting> meetings) {
//        this.meetings = meetings;
//    }

    /**
     * Creates new form PreviewPrintPanel
     *
     * @param printType
     * @param info
     */
//    public PreviewPrintPanel(String printType, List<MeetingInfo> info) {
//        this.printType = printType;
//        initComponents();
//        card1 = new CardLayoutWrapper(jPanel1);
//        initAgentAndListener(info);
//    }
//
//    private void initAgentAndListener(List<MeetingInfo> info) {
////        if (printType.equals(SINGER)) {
////            singerAgent = new SingerPrintAffairAgent();
////            //singerAgent.addListener(singPrintAgentLis);
////            singerAgent.setMeetInfo(info);
////            singerAgent.start();
////        } else if (printType.equals(MERGE)) {
////            mergeAgent = new MergePrintAffairAgent();
////           // mergeAgent.addListener(mergePrintAgentLis);
////            mergeAgent.setMeetInfo(info);
////            mergeAgent.start();
////        }
//    }

    public void showMe(JComponent Parent) {
//        diag = new NInternalDiag<Object, JComponent>("会务单预览",
//                ClientUtils.buildImageIcon("meeting-affair-preview-32.png"), this, 877, 600);
        diag.showInternalDiag(Parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nWaitingPanel1 = new com.nazca.ui.NWaitingPanel();
        contentPane = new javax.swing.JPanel();
        nActionPane1 = new com.nazca.ui.NActionPane();
        cancelBtn = new javax.swing.JButton();
        printBtn = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.CardLayout());
        jPanel1.add(nWaitingPanel1, "WAIT");

        contentPane.setLayout(new java.awt.BorderLayout());
        jPanel1.add(contentPane, "CONTENT");

        add(jPanel1, java.awt.BorderLayout.CENTER);

        cancelBtn.setText("取消");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        nActionPane1.add(cancelBtn);

        printBtn.setText("打印");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });
        nActionPane1.add(printBtn);

        add(nActionPane1, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        diag.hideDiag();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
//            distributeAgent.setArguments(meetings);
//            distributeAgent.start();
        try {
            printBtn.setEnabled(false);
            cancelBtn.setEnabled(false);
            NLabelMessageTool.plainMessage(nActionPane1.getMsgLabel(), "正在打印...");
            if (printType.equals(SINGER)) {
                //printPintExamTengeViewSingle(lis);
            } else if (printType.equals(MERGE)) {
                //printPintExamTengeViewMerge(mergeLis);
            }
            NLabelMessageTool.goodNewsMessage(nActionPane1.getMsgLabel(), "打印成功...");
            diag.hideDiag();
        } catch (Exception e) {
            e.printStackTrace();
            printBtn.setEnabled(false);
            cancelBtn.setEnabled(true);
            NLabelMessageTool.errorMessage(nActionPane1.getMsgLabel(), "打印失败...");
        }

    }//GEN-LAST:event_printBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JPanel contentPane;
    private javax.swing.JPanel jPanel1;
    private com.nazca.ui.NActionPane nActionPane1;
    private com.nazca.ui.NWaitingPanel nWaitingPanel1;
    private javax.swing.JButton printBtn;
    // End of variables declaration//GEN-END:variables
//    private AgentListener<List<SingerReportModel>> singPrintAgentLis = new AgentListener<List<SingerReportModel>>() {
//
//        @Override
//        public void onStarted(long seq) {
//            setBtnEnabled(false);
//            nWaitingPanel1.showWaitingMode();
//            card1.show(CardLayoutWrapper.WAIT);
//            nWaitingPanel1.showWaitingMode("正在获取数据，请稍后...");
//        }
//
//        @Override
//        public void onSucceeded(List<SingerReportModel> result, long seq) {
//            if (result == null || result.size() <= 0) {
//                setEnabled(false);
//                cancelBtn.setEnabled(true);
//                card1.show(CardLayoutWrapper.WAIT);
//                nWaitingPanel1.showMsgMode("没有获取到数据", 0, NWaitingPanel.MSG_MODE_INFO);
//            } else {
//                setBtnEnabled(true);
//                PreviewInfoPanel pane = new PreviewInfoPanel();
//                for (SingerReportModel result1 : result) {
//                    if (null != result1.getUserId()) {
//                        USMSUser user = StaticDataUtil.getUserMap().get(result1.getUserId());
//                        result1.setUserName(user.getName());
//                    }
//                    if (null != result1.getOrgId()) {
//                        USMSOrganization org = StaticDataUtil.getOrgMap().get(result1.getOrgId());
//                        result1.setOrgName(org.getName());
//                    }
//                }
//                SingerReportLisModel mode = new SingerReportLisModel();
//                mode.setSingerlis(result);
//                lis.add(mode);
//                pane.previewListInfo(lis, null, "/com/bjeea/meeting/client/meetingaffairs/ui/MeetingAffairInfoReport.jasper");
//                contentPane.add(pane, BorderLayout.CENTER);
////                contentPane.add(new JLabel("zhangsan"),BorderLayout.NORTH);
//                validate();
//                repaint();
//                card1.show(CardLayoutWrapper.CONTENT);
//            }
//        }
//
//        @Override
//        public void onFailed(String errMsg, int errCode, long seq) {
//            printBtn.setEnabled(false);
//            cancelBtn.setEnabled(true);
//            nWaitingPanel1.showMsgMode(errMsg, errCode, NWaitingPanel.MSG_MODE_ERROR);
//        }
//    };
//
//    private AgentListener<List<MergeAffairModel>> mergePrintAgentLis = new AgentListener<List<MergeAffairModel>>() {
//
//        @Override
//        public void onStarted(long seq) {
//            setBtnEnabled(false);
//            nWaitingPanel1.showWaitingMode();
//            card1.show(CardLayoutWrapper.WAIT);
//            nWaitingPanel1.showWaitingMode("正在获取数据，请稍后...");
//        }
//
//        @Override
//        public void onSucceeded(List<MergeAffairModel> result, long seq) {
//            if (result == null || result.size() <= 0) {
//                setEnabled(false);
//                cancelBtn.setEnabled(true);
//                card1.show(CardLayoutWrapper.WAIT);
//                nWaitingPanel1.showMsgMode("没有获取到数据", 0, NWaitingPanel.MSG_MODE_INFO);
//            } else {
//                setBtnEnabled(true);
//                PreviewInfoPanel pane = new PreviewInfoPanel();
//                for (MergeAffairModel result1 : result) {
//                    USMSUser user = StaticDataUtil.getUserMap().get(result1.getUserId());
//                    result1.setUserName(user.getName());
//                    USMSOrganization org = StaticDataUtil.getOrgMap().get(result1.getOrgId());
//                    result1.setOrgName(org.getName());
//                }
//                MergeReportModel mode = new MergeReportModel();
//                mode.setMergeAffairLis(result);
//                mergeLis.add(mode);
//                pane.previewListInfo(mergeLis, null, "/com/bjeea/meeting/client/meetingaffairs/ui/MergeMeetingAffairInfoReport.jasper");
//                contentPane.add(pane, BorderLayout.CENTER);
////                contentPane.add(new JLabel("zhangsan"),BorderLayout.NORTH);
//                validate();
//                repaint();
//                card1.show(CardLayoutWrapper.CONTENT);
//            }
//        }
//
//        @Override
//        public void onFailed(String errMsg, int errCode, long seq) {
//            printBtn.setEnabled(false);
//            cancelBtn.setEnabled(true);
//            nWaitingPanel1.showMsgMode(errMsg, errCode, NWaitingPanel.MSG_MODE_ERROR);
//        }
//    };
//
//    private void setBtnEnabled(boolean flag) {
//        cancelBtn.setEnabled(flag);
//        printBtn.setEnabled(flag);
//    }
//
//    public static void printPintExamTengeViewSingle(List<SingerReportLisModel> list) {
//        try {
//            JRBeanCollectionDataSource source = new JRBeanCollectionDataSource(
//                    list);
//            Map<String, Object> map = new HashMap<String, Object>();
//            JasperPrint jasperPrint = JasperFillManager.fillReport(PreviewPrintPanel.class.
//                    getResourceAsStream("/com/bjeea/meeting/client/meetingaffairs/ui/MeetingAffairInfoReport.jasper"), map, source);
//            JasperPrintManager.printReport(jasperPrint, true);
//        } catch (JRException ex) {
//            ex.printStackTrace();
//        }
//    }
//    public static void printPintExamTengeViewMerge(List<MergeReportModel> list) {
//        try {
//            JRBeanCollectionDataSource source = new JRBeanCollectionDataSource(
//                    list);
//            Map<String, Object> map = new HashMap<String, Object>();
//            JasperPrint jasperPrint = JasperFillManager.fillReport(PreviewPrintPanel.class.
//                    getResourceAsStream("/com/bjeea/meeting/client/meetingaffairs/ui/MergeMeetingAffairInfoReport.jasper"), map, source);
//            JasperPrintManager.printReport(jasperPrint, true);
//        } catch (JRException ex) {
//            ex.printStackTrace();
//        }
//    }
//    /**
//     * 打印并派发
//     */
//    private AgentListener<List<Meeting>> printAgentLis = new AgentListener<List<Meeting>>() {
//
//        @Override
//        public void onStarted(long seq) {
//            printBtn.setEnabled(false);
//            cancelBtn.setEnabled(false);
//            NLabelMessageTool.plainMessage(nActionPane1.getMsgLabel(), "正在打印...");
//        }
//
//        @Override
//        public void onSucceeded(List<Meeting> result, long seq) {
//            printBtn.setEnabled(true);
//            cancelBtn.setEnabled(true);
//            printPintExamTengeViewSingle(lis);
//            NLabelMessageTool.goodNewsMessage(nActionPane1.getMsgLabel(), "打印成功...");
//            diag.hideDiag();
//        }
//
//        @Override
//        public void onFailed(String errMsg, int errCode, long seq) {
//            printBtn.setEnabled(false);
//            cancelBtn.setEnabled(true);
//            NLabelMessageTool.errorMessage(nActionPane1.getMsgLabel(), "打印失败...");
//        }
//    };

}
