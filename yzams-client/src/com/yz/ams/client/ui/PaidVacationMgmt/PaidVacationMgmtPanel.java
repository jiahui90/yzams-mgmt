/*
 * PaidVacationMgmtPanel.java
 * 
 * Copyright(c) 2007-2016 by Yingzhi Tech
 * All Rights Reserved
 * 
 * Created at 2016-02-19 10:08:46
 */
package com.yz.ams.client.ui.PaidVacationMgmt;

import com.nazca.ui.NWaitingPanel;
import com.nazca.ui.TextHinter;
import com.nazca.ui.UIUtilities;
import com.nazca.ui.model.SimpleObjectListModel;
import com.nazca.ui.util.CardLayoutWrapper;
import com.yz.ams.client.agent.AgentListener;
import com.yz.ams.client.agent.QueryPaidVacationAgent;
import com.yz.ams.client.model.PaidVacationTableModel;
import com.yz.ams.client.renderer.PaidVacationTableRenderer;
import com.yz.ams.client.util.ClientUtils;
import com.yz.ams.model.wrap.mgmt.PaidVacationWrap;
import java.awt.Rectangle;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 * 年假管理面板
 *
 * @author Your Name <zhaohongkun@yzhtech.com>
 */
public class PaidVacationMgmtPanel extends javax.swing.JPanel {

    private CardLayoutWrapper card = null;
    private PaidVacationTableModel paidVacationTableModel = null;
    private QueryPaidVacationAgent queryPaidVacationAgent = null;
    private final SimpleObjectListModel<Integer> yearComboxModel = new SimpleObjectListModel<>();
    private PaidVacationWrap curPaidVacation = null;
    List<PaidVacationWrap> backResult = null;
    private final PaidVacationTableRenderer renderer = new PaidVacationTableRenderer();

    /**
     * Creates new form PaidVacationMgmtPanel
     */
    public PaidVacationMgmtPanel() {
        initComponents();
        initUI();
        initAgentAndListener();
        initModelAndRenderer();
        refreshBtn.doClick();
    }

    private void initUI() {
        //检索框里加搜索标志和默认背景字
        UIUtilities.attachSearchIcon(searchTxFd);
        TextHinter.attach("输入姓名并回车", searchTxFd);
        card = new CardLayoutWrapper(cadPanel);
        yearCmBox.setModel(yearComboxModel);

    }

    private void initModelAndRenderer() {
        paidVacationTableModel = new PaidVacationTableModel();
        tableComp.setModel(paidVacationTableModel);
        yearComboxModel.setObjectList(ClientUtils.getYears());
        yearCmBox.setSelectedIndex(0);
        tableComp.setDefaultRenderer(Object.class, renderer);

    }

    private void initAgentAndListener() {
        queryPaidVacationAgent = new QueryPaidVacationAgent();
        queryPaidVacationAgent.addListener(queryPaidVacationAgentLis);

        tableComp.getSelectionModel().addListSelectionListener(new ListSelectionListener() {//表格监听
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    selectingPaidVacation();
                }
            }
        });
    }


    private void docUpdated() {
        String keywords = searchTxFd.getText().trim();
        renderer.setKeywords(keywords);
        repaint();
        if (!keywords.isEmpty()) {
            int idx = tableComp.getSelectedRow();
            if (idx >= 0) {
                idx = tableComp.convertRowIndexToModel(idx);
            }
            int findRow = paidVacationTableModel.findNext(keywords, idx);
            if (findRow < 0) {
                tableComp.clearSelection();
            } else {
                findRow = tableComp.convertRowIndexToView(findRow);
                tableComp.getSelectionModel().setSelectionInterval(findRow, findRow);
                Rectangle rect = tableComp.getCellRect(findRow, 0, true);
                tableComp.scrollRectToVisible(rect);
            }
        }
        else{
            tableComp.setRowSelectionInterval(0,0);
        }
            }

    /**
     * 设置更新按钮、刷新按钮、搜索框的启用和禁用
     *
     * @param enabled
     */
    private void setBtnEnabled(boolean enabled) {
        updateBtn.setEnabled(enabled);
        refreshBtn.setEnabled(enabled);
        searchTxFd.setEnabled(enabled);
        yearCmBox.setEnabled(enabled);
    }

    private void selectingPaidVacation() {//表格监听
        int idx = tableComp.getSelectedRow();
        if (idx >= 0) {
            idx = tableComp.convertRowIndexToModel(idx);
            curPaidVacation = paidVacationTableModel.getData(idx);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler18 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0));
        buttonGroup1 = new javax.swing.ButtonGroup();
        paidVacationPanel = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        refreshBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        jLabel1 = new javax.swing.JLabel();
        yearCmBox = new javax.swing.JComboBox<>();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        searchTxFd = new javax.swing.JTextField();
        cadPanel = new javax.swing.JPanel();
        dataPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableComp = new javax.swing.JTable();
        dataWaitPanel = new com.nazca.ui.NWaitingPanel();
        dataFailPane = new com.nazca.ui.FailureInfoPanel();

        setLayout(new java.awt.BorderLayout());

        paidVacationPanel.setLayout(new java.awt.BorderLayout());

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/yz/ams/client/res/refresh_16.png"))); // NOI18N
        refreshBtn.setText("刷新");
        refreshBtn.setFocusable(false);
        refreshBtn.setMargin(new java.awt.Insets(2, 5, 2, 5));
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(refreshBtn);

        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/yz/ams/client/res/update-16.png"))); // NOI18N
        updateBtn.setText("修改");
        updateBtn.setFocusable(false);
        updateBtn.setMargin(new java.awt.Insets(2, 5, 2, 5));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(updateBtn);
        jToolBar1.add(filler2);

        jLabel1.setText("选择年：");
        jToolBar1.add(jLabel1);
        jLabel1.getAccessibleContext().setAccessibleName("选择年：");

        yearCmBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        yearCmBox.setMaximumSize(new java.awt.Dimension(60, 20));
        yearCmBox.setMinimumSize(new java.awt.Dimension(60, 20));
        yearCmBox.setPreferredSize(new java.awt.Dimension(60, 20));
        yearCmBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                yearCmBoxItemStateChanged(evt);
            }
        });
        jToolBar1.add(yearCmBox);
        yearCmBox.getAccessibleContext().setAccessibleName("");

        jToolBar1.add(filler1);

        searchTxFd.setMaximumSize(new java.awt.Dimension(120, 2147483647));
        searchTxFd.setMinimumSize(new java.awt.Dimension(120, 20));
        searchTxFd.setPreferredSize(new java.awt.Dimension(120, 20));
        searchTxFd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTxFdActionPerformed(evt);
            }
        });
        jToolBar1.add(searchTxFd);

        paidVacationPanel.add(jToolBar1, java.awt.BorderLayout.NORTH);

        cadPanel.setLayout(new java.awt.CardLayout());

        dataPanel.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        tableComp.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        tableComp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableComp.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(tableComp);
        tableComp.getAccessibleContext().setAccessibleName("");

        dataPanel.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        cadPanel.add(dataPanel, "CONTENT");
        cadPanel.add(dataWaitPanel, "WAIT");
        cadPanel.add(dataFailPane, "card4");

        paidVacationPanel.add(cadPanel, java.awt.BorderLayout.CENTER);

        add(paidVacationPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        int index = yearCmBox.getSelectedIndex();
        if (index >= 0) {
        int year = (int)yearCmBox.getSelectedItem();
        queryPaidVacationAgent.setParameters(year);
        queryPaidVacationAgent.start();
        }
    }//GEN-LAST:event_refreshBtnActionPerformed
    /**
     * 年的下来列表框的监听
     *
     * @param evt
     */
    private void yearCmBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_yearCmBoxItemStateChanged
            refreshBtnActionPerformed(null);
    }//GEN-LAST:event_yearCmBoxItemStateChanged

    private void searchTxFdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTxFdActionPerformed
        docUpdated();
    }//GEN-LAST:event_searchTxFdActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        ModifyPaidVacationPanel editPane = new ModifyPaidVacationPanel();
        editPane.initPaneContent(curPaidVacation);
        PaidVacationWrap vacations = editPane.showMe(this);
        if (vacations != null) {
            refreshBtnActionPerformed(evt);
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel cadPanel;
    private com.nazca.ui.FailureInfoPanel dataFailPane;
    private javax.swing.JPanel dataPanel;
    private com.nazca.ui.NWaitingPanel dataWaitPanel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler18;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel paidVacationPanel;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JTextField searchTxFd;
    private javax.swing.JTable tableComp;
    private javax.swing.JButton updateBtn;
    private javax.swing.JComboBox<String> yearCmBox;
    // End of variables declaration//GEN-END:variables
    private final AgentListener<List<PaidVacationWrap>> queryPaidVacationAgentLis = new AgentListener<List<PaidVacationWrap>>() {
        @Override
        public void onStarted(long seq) {
            setBtnEnabled(false);
            dataWaitPanel.showWaitingMode("数据加载中，请稍后…");
            dataWaitPanel.setIndeterminate(true);
            dataWaitPanel.showWaitingMode();
            card.show(CardLayoutWrapper.WAIT);
        }

        @Override
        public void onSucceeded(List<PaidVacationWrap> result, long seq) {
            backResult = result;
            dataWaitPanel.setIndeterminate(false);
            if (result != null && result.size() > 0) {//判断是否为空
                paidVacationTableModel.setDatas(result);
                card.show(CardLayoutWrapper.CONTENT);
                tableComp.getSelectionModel().setSelectionInterval(0, 0);//刷星结束默认第一条数据
               setBtnEnabled(true);
            } else {
                dataWaitPanel.showMsgMode("暂无年假信息", 0, NWaitingPanel.MSG_MODE_INFO);
                card.show(CardLayoutWrapper.WAIT);
                yearCmBox.setEnabled(true);
                refreshBtn.setEnabled(true);
                updateBtn.setEnabled(false);
                searchTxFd.setEnabled(false);
            }
        }

        @Override
        public void onFailed(String errMsg, int errCode, long seq) {
            refreshBtn.setEnabled(true);
            updateBtn.setEnabled(false);
            yearCmBox.setEnabled(true);
            searchTxFd.setEnabled(false);
            dataWaitPanel.showMsgMode(errMsg, errCode, NWaitingPanel.MSG_MODE_ERROR);
            card.show(CardLayoutWrapper.FAIL);
            dataWaitPanel.setIndeterminate(false);
        }

    };
}
